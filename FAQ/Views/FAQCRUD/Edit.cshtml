@model FAQ.Models.FAQuestions

@{
    ViewBag.Title = "Edit";
}
<br />
<h2>Edit</h2>
@using (Html.BeginForm("EditQuestion", "FAQCRUD", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>FAQuestions</h4>
        <hr />
        @ViewBag.Success
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.QuestionID)
        @Html.HiddenFor(model => model.CategoryID)
        <div class="form-group">
            @Html.LabelFor(model => model.SiteCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.SiteCode, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.CategoryName, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QuestionName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QuestionName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QuestionName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Answer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Answer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Answer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tags, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Hide, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Hide, new { htmlAttributes = new { @class = "form-control toggle", onchange = "HideQuestion("+ Model.QuestionID +")" } })
                @Html.ValidationMessageFor(model => model.Hide, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
@Html.ActionLink("Delete", "Delete", "FAQCRUD", new { id = Model.QuestionID, categoryid=Model.CategoryID }, new { onclick = "return confirm('Are sure wants to delete?');" })
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js">  </script>

<script>
    function HideQuestion(questionid)
    {
        var checked = 1;
        if ($("input[name='Hide']:checked").val() == "true") { checked = 1; }
        else { checked = 0; }
        $.ajax({
                url: '@Url.Action("Hide", "FAQCRUD")',
                dataType: 'json',
                data: { id: questionid, val: checked },
                type: 'GET',
                success: function (response) {
                    alert('Hide mode changed');
                },
                error: function (response)
                {
                    alert("failed");
                }
        });
    }
</script>

